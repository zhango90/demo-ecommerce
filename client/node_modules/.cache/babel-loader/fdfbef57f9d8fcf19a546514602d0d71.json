{"ast":null,"code":"import { createSelector } from 'reselect';\n\nconst selectShop = state => state.shop;\n\nexport const selectShopCollections = createSelector([selectShop], shop => shop.collections);\nexport const selectIsFetching = createSelector([selectShop], shop => shop.isFetching);\nexport const selectCollectionForPreview = createSelector([selectShopCollections], collections => collections ? Object.keys(collections).map(collection => {\n  return collections[collection];\n}) : []);\nexport const selectCollection = collectionUrlParam => createSelector([selectShopCollections], collections => collections ? collections[collectionUrlParam] : null);\nexport const selectIsCollectionsLoaded = createSelector([selectShop], shop => !!shop.collections);","map":{"version":3,"sources":["/Users/ict/web-projects/demo-ecommerce/client/src/redux/shop/shop.selectors.js"],"names":["createSelector","selectShop","state","shop","selectShopCollections","collections","selectIsFetching","isFetching","selectCollectionForPreview","Object","keys","map","collection","selectCollection","collectionUrlParam","selectIsCollectionsLoaded"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;;AAIA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAlC;;AAEA,OAAO,MAAMC,qBAAqB,GAAGJ,cAAc,CACjD,CAACC,UAAD,CADiD,EAEjDE,IAAI,IAAIA,IAAI,CAACE,WAFoC,CAA5C;AAIP,OAAO,MAAMC,gBAAgB,GAAGN,cAAc,CAC5C,CAACC,UAAD,CAD4C,EAE5CE,IAAI,IAAIA,IAAI,CAACI,UAF+B,CAAvC;AAMP,OAAO,MAAMC,0BAA0B,GAAGR,cAAc,CACtD,CAACI,qBAAD,CADsD,EAEtDC,WAAW,IAAGA,WAAW,GAAGI,MAAM,CAACC,IAAP,CAAYL,WAAZ,EAAyBM,GAAzB,CAA8BC,UAAD,IAAgB;AACvE,SAAOP,WAAW,CAACO,UAAD,CAAlB;AACD,CAF2B,CAAH,GAEpB,EAJiD,CAAjD;AAQP,OAAO,MAAMC,gBAAgB,GAAGC,kBAAkB,IAChDd,cAAc,CACZ,CAACI,qBAAD,CADY,EAEZC,WAAW,IAAIA,WAAW,GAAGA,WAAW,CAACS,kBAAD,CAAd,GAAqC,IAFnD,CADT;AAML,OAAO,MAAMC,yBAAyB,GAAGf,cAAc,CACrD,CAACC,UAAD,CADqD,EAErDE,IAAI,IAAI,CAAC,CAACA,IAAI,CAACE,WAFsC,CAAhD","sourcesContent":["import { createSelector } from 'reselect'\n\n\n\nconst selectShop = state => state.shop\n\nexport const selectShopCollections = createSelector(\n  [selectShop],\n  shop => shop.collections\n)\nexport const selectIsFetching = createSelector(\n  [selectShop],\n  shop => shop.isFetching\n)\n\n\nexport const selectCollectionForPreview = createSelector(\n  [selectShopCollections],\n  collections =>collections ? Object.keys(collections).map((collection) => {\n    return collections[collection]\n  }) : [] \n)\n\n\nexport const selectCollection = collectionUrlParam => \n  createSelector(\n    [selectShopCollections],\n    collections => collections ? collections[collectionUrlParam] : null\n  )\n\n  export const selectIsCollectionsLoaded = createSelector(\n    [selectShop],\n    shop => !!shop.collections \n  )"]},"metadata":{},"sourceType":"module"}