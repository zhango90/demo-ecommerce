{"ast":null,"code":"var _jsxFileName = \"/Users/ict/web-projects/demo-ecommerce/src/pages/shop/shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport CollectionOverview from '../../components/collection-overview/collection-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const collectionRef = firestore.collection('collections');\n    collectionRef.onSnapshot(async snapshot => {\n      const collectionMap = convertCollectionsSnapshotToMap(snapshot);\n      this.props.updateCollections(collectionMap);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const match = this.props.match;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: () => CollectionOverview(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: () => CollectionPage(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collections => dispatch(updateCollections(collections))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/ict/web-projects/demo-ecommerce/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","updateCollections","WithSpinner","CollectionOverview","CollectionPage","firestore","convertCollectionsSnapshotToMap","CollectionOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","state","loading","unsubscribeFromSnapshot","componentDidMount","collectionRef","collection","onSnapshot","snapshot","collectionMap","props","setState","render","match","path","mapDispatchToProps","dispatch","collections"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,QAAoB,kBAApB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,SAAQC,iBAAR,QAAgC,+BAAhC;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AACA,OAAOC,kBAAP,MAA+B,oEAA/B;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAAQC,SAAR,EAAmBC,+BAAnB,QAAyD,+BAAzD;AAEA,MAAMC,6BAA6B,GAAGL,WAAW,CAACC,kBAAD,CAAjD;AACA,MAAMK,yBAAyB,GAAGN,WAAW,CAACE,cAAD,CAA7C;;AAEA,MAAMK,QAAN,SAAwBX,KAAK,CAACY,SAA9B,CAAwC;AAAA;AAAA;AAAA,SAEtCC,KAFsC,GAE9B;AACNC,MAAAA,OAAO,EAAG;AADJ,KAF8B;AAAA,SAMtCC,uBANsC,GAMZ,IANY;AAAA;;AAOtCC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,aAAa,GAAGV,SAAS,CAACW,UAAV,CAAqB,aAArB,CAAtB;AACAD,IAAAA,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAkB;AACzC,YAAMC,aAAa,GAAGb,+BAA+B,CAACY,QAAD,CAArD;AACA,WAAKE,KAAL,CAAWnB,iBAAX,CAA6BkB,aAA7B;AACA,WAAKE,QAAL,CAAc;AAACT,QAAAA,OAAO,EAAE;AAAV,OAAd;AACD,KAJD;AAKD;;AACDU,EAAAA,MAAM,GAAG;AAAA,UACCC,KADD,GACU,KAAKH,KADf,CACCG,KADD;AAEP,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEA,KAAK,CAACC,IAAK,EAAjC;AAAoC,MAAA,MAAM,EAAE,MAAMrB,kBAAkB,EAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEoB,KAAK,CAACC,IAAK,gBAA3B;AAA4C,MAAA,MAAM,EAAE,MAAKpB,cAAc,EAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAOD;;AAxBqC;;AA2BxC,MAAMqB,kBAAkB,GAAGC,QAAQ,KAAK;AACtCzB,EAAAA,iBAAiB,EAAG0B,WAAD,IAAiBD,QAAQ,CAACzB,iBAAiB,CAAC0B,WAAD,CAAlB;AADN,CAAL,CAAnC;;AAIA,eAAe3B,OAAO,CAAC,IAAD,EAAOyB,kBAAP,CAAP,CAAkChB,QAAlC,CAAf","sourcesContent":["import React from 'react';\nimport {Route} from 'react-router-dom'\nimport {connect} from 'react-redux'\n\nimport {updateCollections} from '../../redux/shop/shop.actions'\nimport WithSpinner from '../../components/with-spinner/with-spinner.component'\nimport CollectionOverview from '../../components/collection-overview/collection-overview.component'\nimport CollectionPage from '../collection/collection.component'\nimport {firestore, convertCollectionsSnapshotToMap} from '../../firebase/firebase.utils'\n\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionOverview)\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage)\n\nclass ShopPage  extends React.Component {\n\n  state = {\n    loading : true\n  }\n\n  unsubscribeFromSnapshot = null\n  componentDidMount() {\n    const collectionRef = firestore.collection('collections')\n    collectionRef.onSnapshot(async snapshot => {\n      const collectionMap = convertCollectionsSnapshotToMap(snapshot)\n      this.props.updateCollections(collectionMap)\n      this.setState({loading: false})\n    })\n  }\n  render() {\n    const { match} = this.props\n    return (\n      <div className='shop-page'>\n        <Route exact path={`${match.path}`} render={() => CollectionOverview()}></Route>\n        <Route path={`${match.path}/:collectionId`} render={() =>CollectionPage()}></Route>\n\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: (collections) => dispatch(updateCollections(collections))\n})\n\nexport default connect(null, mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}