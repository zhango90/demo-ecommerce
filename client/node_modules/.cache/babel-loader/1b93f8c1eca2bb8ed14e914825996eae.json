{"ast":null,"code":"import { createSelector } from 'reselect'; //input selector \n\nconst selectCart = state => state.cart;\n\nexport const selectCartItems = createSelector([selectCart], cart => cart.cartItems);\nexport const selectCartHidden = createSelector([selectCart], cart => cart.hidden);\nexport const selectCartItemsCount = createSelector([selectCartItems], cartItems => cartItems.reduce((a, b) => {\n  return a + b.quantity;\n}, 0));\nexport const selectCartTotalPrice = createSelector([selectCartItems], cartItems => cartItems.reduce((accumulator, nextItem) => {\n  return accumulator + nextItem.price * nextItem.quantity;\n}, 0));","map":{"version":3,"sources":["/Users/ict/web-projects/demo-ecommerce/src/redux/cart/cart.selectors.js"],"names":["createSelector","selectCart","state","cart","selectCartItems","cartItems","selectCartHidden","hidden","selectCartItemsCount","reduce","a","b","quantity","selectCartTotalPrice","accumulator","nextItem","price"],"mappings":"AAAA,SAAQA,cAAR,QAA6B,UAA7B,C,CAEA;;AACA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAlC;;AAEA,OAAO,MAAMC,eAAe,GAAGJ,cAAc,CAC3C,CAACC,UAAD,CAD2C,EAE3CE,IAAI,IAAIA,IAAI,CAACE,SAF8B,CAAtC;AAKP,OAAO,MAAMC,gBAAgB,GAAGN,cAAc,CAC5C,CAACC,UAAD,CAD4C,EAE5CE,IAAI,IAAIA,IAAI,CAACI,MAF+B,CAAvC;AAKP,OAAO,MAAMC,oBAAoB,GAAGR,cAAc,CAChD,CAACI,eAAD,CADgD,EAEhDC,SAAS,IAAIA,SAAS,CAACI,MAAV,CAAiB,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACtC,SAAOD,CAAC,GAAGC,CAAC,CAACC,QAAb;AACD,CAFY,EAEV,CAFU,CAFmC,CAA3C;AAOP,OAAO,MAAMC,oBAAoB,GAAGb,cAAc,CAChD,CAACI,eAAD,CADgD,EAEhDC,SAAS,IAAIA,SAAS,CAACI,MAAV,CAAiB,CAACK,WAAD,EAAcC,QAAd,KAA2B;AACvD,SAAOD,WAAW,GAAIC,QAAQ,CAACC,KAAT,GAAiBD,QAAQ,CAACH,QAAhD;AACD,CAFY,EAEV,CAFU,CAFmC,CAA3C","sourcesContent":["import {createSelector} from 'reselect'\n\n//input selector \nconst selectCart = state => state.cart\n\nexport const selectCartItems = createSelector(\n  [selectCart],\n  cart => cart.cartItems\n)\n\nexport const selectCartHidden = createSelector(\n  [selectCart],\n  cart => cart.hidden\n)\n\nexport const selectCartItemsCount = createSelector(\n  [selectCartItems],\n  cartItems => cartItems.reduce((a, b) => {\n    return a + b.quantity\n  }, 0)\n)\n\nexport const selectCartTotalPrice = createSelector(\n  [selectCartItems],\n  cartItems => cartItems.reduce((accumulator, nextItem) => {\n    return accumulator + (nextItem.price * nextItem.quantity)\n  }, 0)\n)"]},"metadata":{},"sourceType":"module"}