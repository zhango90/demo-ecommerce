{"ast":null,"code":"var _jsxFileName = \"/Users/ict/web-projects/demo-ecommerce/src/pages/shop/shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nimport { selectIsFetching, selectIsCollectionsLoaded } from '../../redux/shop/shop.selectors';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport CollectionOverview from '../../components/collection-overview/collection-overview.component';\nimport CollectionPage from '../collection/collection.component';\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    this.props.fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const _this$props = this.props,\n          match = _this$props.match,\n          isFetching = _this$props.isFetching,\n          isCollectionLoaded = _this$props.isCollectionLoaded;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => React.createElement(CollectionOverviewWithSpinner, Object.assign({\n        isLoading: isFetching\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: !isCollectionLoaded\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nconst mapStateToProps = createStructuredSelector({\n  isFetching: selectIsFetching,\n  isCollectionLoaded: selectIsCollectionsLoaded\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/ict/web-projects/demo-ecommerce/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","createStructuredSelector","fetchCollectionsStartAsync","selectIsFetching","selectIsCollectionsLoaded","WithSpinner","CollectionOverview","CollectionPage","CollectionOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","componentDidMount","props","render","match","isFetching","isCollectionLoaded","path","mapDispatchToProps","dispatch","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,QAAoB,kBAApB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,wBAAR,QAAuC,UAAvC;AAEA,SAAQC,0BAAR,QAAyC,+BAAzC;AACA,SAASC,gBAAT,EAA2BC,yBAA3B,QAA4D,iCAA5D;AAEA,OAAOC,WAAP,MAAwB,sDAAxB;AACA,OAAOC,kBAAP,MAA+B,oEAA/B;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AAEA,MAAMC,6BAA6B,GAAGH,WAAW,CAACC,kBAAD,CAAjD;AACA,MAAMG,yBAAyB,GAAGJ,WAAW,CAACE,cAAD,CAA7C;;AAEA,MAAMG,QAAN,SAAwBZ,KAAK,CAACa,SAA9B,CAAwC;AAEtCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWX,0BAAX;AACD;;AACDY,EAAAA,MAAM,GAAG;AAAA,wBAC0C,KAAKD,KAD/C;AAAA,UACCE,KADD,eACCA,KADD;AAAA,UACQC,UADR,eACQA,UADR;AAAA,UACoBC,kBADpB,eACoBA,kBADpB;AAEP,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEF,KAAK,CAACG,IAAK,EAAjC;AAAoC,MAAA,MAAM,EAAGL,KAAD,IAAW,oBAAC,6BAAD;AAA+B,QAAA,SAAS,EAAEG;AAA1C,SAA0DH,KAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEE,KAAK,CAACG,IAAK,gBAA3B;AAA4C,MAAA,MAAM,EAAGL,KAAD,IAAW,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAE,CAACI;AAAvC,SAAgEJ,KAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAOD;;AAdqC;;AAiBxC,MAAMM,kBAAkB,GAAGC,QAAQ,KAAK;AACtClB,EAAAA,0BAA0B,EAAE,MAAMkB,QAAQ,CAAClB,0BAA0B,EAA3B;AADJ,CAAL,CAAnC;;AAGA,MAAMmB,eAAe,GAAGpB,wBAAwB,CAAC;AAC/Ce,EAAAA,UAAU,EAAGb,gBADkC;AAE/Cc,EAAAA,kBAAkB,EAAEb;AAF2B,CAAD,CAAhD;AAKA,eAAeJ,OAAO,CAACqB,eAAD,EAAkBF,kBAAlB,CAAP,CAA6CT,QAA7C,CAAf","sourcesContent":["import React from 'react';\nimport {Route} from 'react-router-dom'\nimport {connect} from 'react-redux'\nimport {createStructuredSelector} from 'reselect'\n\nimport {fetchCollectionsStartAsync} from '../../redux/shop/shop.actions'\nimport { selectIsFetching, selectIsCollectionsLoaded } from '../../redux/shop/shop.selectors'\n\nimport WithSpinner from '../../components/with-spinner/with-spinner.component'\nimport CollectionOverview from '../../components/collection-overview/collection-overview.component'\nimport CollectionPage from '../collection/collection.component'\n\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionOverview)\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage)\n\nclass ShopPage  extends React.Component {\n\n  componentDidMount() {\n    this.props.fetchCollectionsStartAsync()\n  }\n  render() {\n    const { match, isFetching, isCollectionLoaded} = this.props\n    return (\n      <div className='shop-page'>\n        <Route exact path={`${match.path}`} render={(props) => <CollectionOverviewWithSpinner isLoading={isFetching} {...props}/>}></Route>\n        <Route path={`${match.path}/:collectionId`} render={(props) => <CollectionPageWithSpinner isLoading={!isCollectionLoaded } {...props}/>}></Route>\n\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n})\nconst mapStateToProps = createStructuredSelector({\n  isFetching : selectIsFetching,\n  isCollectionLoaded: selectIsCollectionsLoaded\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}