{"ast":null,"code":"import { takeLatest, call, put } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nimport ShopActionTypes from './shop.types';\nexport function* fetchCollectionsAsync() {\n  yield console.log(\"I am Fired\");\n\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (err) {\n    yield put(fetchCollectionsFailure(err.message));\n  }\n  /* collectionRef.get()\n    .then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot)\n      //dispatch(fetchCollectionsSuccess(collectionsMap))\n    })\n    .catch(err => {\n      //dispatch(fetchCollectionsFailure(err.message))\n    }) */\n\n}\nexport function* fetchCollectionsStart() {\n  yield takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/Users/ict/web-projects/demo-ecommerce/client/src/redux/shop/shop.sagas.js"],"names":["takeLatest","call","put","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","ShopActionTypes","fetchCollectionsAsync","console","log","collectionRef","collection","snapshot","get","collectionsMap","err","message","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAAQA,UAAR,EAAoBC,IAApB,EAA0BC,GAA1B,QAAqC,oBAArC;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA0D,+BAA1D;AACA,SAAQC,uBAAR,EAAiCC,uBAAjC,QAA+D,gBAA/D;AAGA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;;AAEA,MAAI;AACF,UAAMC,aAAa,GAAGR,SAAS,CAACS,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMd,IAAI,CAACG,+BAAD,EAAkCS,QAAlC,CAAjC;AACA,UAAMX,GAAG,CAACG,uBAAuB,CAACU,cAAD,CAAxB,CAAT;AACD,GALD,CAMA,OAAMC,GAAN,EAAW;AACT,UAAMd,GAAG,CAACI,uBAAuB,CAACU,GAAG,CAACC,OAAL,CAAxB,CAAT;AACD;AAED;;;;;;;;;AAQD;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMlB,UAAU,CAACO,eAAe,CAACY,uBAAjB,EAA0CX,qBAA1C,CAAhB;AACD","sourcesContent":["import {takeLatest, call, put } from 'redux-saga/effects'\nimport { firestore, convertCollectionsSnapshotToMap} from '../../firebase/firebase.utils'\nimport {fetchCollectionsSuccess, fetchCollectionsFailure} from './shop.actions'\n\n\nimport ShopActionTypes from './shop.types'\n\nexport function* fetchCollectionsAsync() {\n  yield console.log(\"I am Fired\")\n\n  try {\n    const collectionRef = firestore.collection('collections')\n    const snapshot = yield collectionRef.get()\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot)  \n    yield put(fetchCollectionsSuccess(collectionsMap))\n  }\n  catch(err) {\n    yield put(fetchCollectionsFailure(err.message))\n  }\n\n  /* collectionRef.get()\n    .then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot)\n      //dispatch(fetchCollectionsSuccess(collectionsMap))\n    })\n    .catch(err => {\n      //dispatch(fetchCollectionsFailure(err.message))\n    }) */\n}\n\nexport function* fetchCollectionsStart() {\n  yield takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync)\n}\n"]},"metadata":{},"sourceType":"module"}