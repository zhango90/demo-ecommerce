{"ast":null,"code":"import _objectSpread from \"/Users/ict/web-projects/demo-ecommerce/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/ict/web-projects/demo-ecommerce/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ict/web-projects/demo-ecommerce/src/components/sign-up/sign-up.component.jsx\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { signUpStart } from '../../redux/user/user.actions'; //import { auth, createUserProfileDocument } from '../../firebase/firebase.utils';\n\nimport './sign-up.styles.scss';\n\nconst SignUp = props => {\n  const _useState = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        credentials = _useState2[0],\n        setCredentials = _useState2[1];\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const signUpStart = this.props.signUpStart;\n    signUpStart(credentials);\n  };\n\n  const handleChange = event => {\n    const _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n    setCredentials(_objectSpread({}, credentials, {\n      [name]: value\n    }));\n  };\n\n  const displayName = credentials.displayName,\n        email = credentials.email,\n        password = credentials.password,\n        confirmPassword = credentials.confirmPassword;\n  return React.createElement(\"div\", {\n    className: \"sign-up\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"I do not have a account\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Sign up with your email and password\"), React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    type: \"text\",\n    name: \"displayName\",\n    value: displayName,\n    onChange: handleChange,\n    label: \"Display Name\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: handleChange,\n    label: \"Email\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: handleChange,\n    label: \"Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    onChange: handleChange,\n    label: \"Confirm Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"SIGN UP\")));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userInfo => dispatch(signUpStart(userInfo))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/Users/ict/web-projects/demo-ecommerce/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","connect","FormInput","CustomButton","signUpStart","SignUp","props","displayName","email","password","confirmPassword","credentials","setCredentials","handleSubmit","event","preventDefault","handleChange","target","name","value","mapDispatchToProps","dispatch","userInfo"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { connect } from 'react-redux'\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { signUpStart } from '../../redux/user/user.actions'\n//import { auth, createUserProfileDocument } from '../../firebase/firebase.utils';\n\nimport './sign-up.styles.scss';\n\nconst SignUp = (props) => {\n\n  const [credentials, setCredentials] = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  })\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const { signUpStart } = this.props\n    signUpStart(credentials)\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    setCredentials({ ...credentials, [name]: value });\n  };\n  const { displayName, email, password, confirmPassword } = credentials;\n  return (\n    <div className='sign-up'>\n      <h2 className='title'>I do not have a account</h2>\n      <span>Sign up with your email and password</span>\n      <form className='sign-up-form' onSubmit={handleSubmit}>\n        <FormInput\n          type='text'\n          name='displayName'\n          value={displayName}\n          onChange={handleChange}\n          label='Display Name'\n          required\n        />\n        <FormInput\n          type='email'\n          name='email'\n          value={email}\n          onChange={handleChange}\n          label='Email'\n          required\n        />\n        <FormInput\n          type='password'\n          name='password'\n          value={password}\n          onChange={handleChange}\n          label='Password'\n          required\n        />\n        <FormInput\n          type='password'\n          name='confirmPassword'\n          value={confirmPassword}\n          onChange={handleChange}\n          label='Confirm Password'\n          required\n        />\n        <CustomButton type='submit'>SIGN UP</CustomButton>\n      </form>\n    </div>\n  );\n}\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: (userInfo) => dispatch(signUpStart(userInfo))\n})\n\nexport default connect(null, mapDispatchToProps)(SignUp);\n"]},"metadata":{},"sourceType":"module"}