{"ast":null,"code":"import { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport ShopActionTypes from './shop.types';\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsSuccess = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: errorMessage\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collection');\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionsMap));\n    }).catch(err => {\n      dispatch(fetchCollectionsFailure(err.message));\n    });\n  };\n};","map":{"version":3,"sources":["/Users/ict/web-projects/demo-ecommerce/src/redux/shop/shop.actions.js"],"names":["firestore","convertCollectionsSnapshotToMap","ShopActionTypes","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionsSuccess","collectionsMap","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsFailure","errorMessage","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","catch","err","message"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AACA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,MAAMC,qBAAqB,GAAG,OAAO;AAC1CC,EAAAA,IAAI,EAAEF,eAAe,CAACG;AADoB,CAAP,CAA9B;AAIP,OAAO,MAAMC,uBAAuB,GAAGC,cAAc,KAAK;AACxDH,EAAAA,IAAI,EAAEF,eAAe,CAACM,yBADkC;AAExDC,EAAAA,OAAO,EAAEF;AAF+C,CAAL,CAA9C;AAIP,OAAO,MAAMG,uBAAuB,GAAGC,YAAY,KAAK;AACtDP,EAAAA,IAAI,EAAEF,eAAe,CAACM,yBADgC;AAEtDC,EAAAA,OAAO,EAAEE;AAF6C,CAAL,CAA5C;AAKP,OAAO,MAAMC,0BAA0B,GAAG,MAAM;AAC9C,SAAOC,QAAQ,IAAI;AACjB,UAAMC,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,YAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACV,qBAAqB,EAAtB,CAAR;AACAW,IAAAA,aAAa,CAACE,GAAd,GACGC,IADH,CACQC,QAAQ,IAAG;AACf,YAAMX,cAAc,GAAGN,+BAA+B,CAACiB,QAAD,CAAtD;AACAL,MAAAA,QAAQ,CAACP,uBAAuB,CAACC,cAAD,CAAxB,CAAR;AACD,KAJH,EAKGY,KALH,CAKSC,GAAG,IAAI;AACZP,MAAAA,QAAQ,CAACH,uBAAuB,CAACU,GAAG,CAACC,OAAL,CAAxB,CAAR;AACD,KAPH;AAQD,GAXD;AAYD,CAbM","sourcesContent":["import { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils'\nimport ShopActionTypes from './shop.types'\n\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n})\n\nexport const fetchCollectionsSuccess = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n})\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: errorMessage\n})\n\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collection')\n    dispatch(fetchCollectionsStart())\n    collectionRef.get()\n      .then(snapshot =>{\n        const collectionsMap = convertCollectionsSnapshotToMap(snapshot)\n        dispatch(fetchCollectionsSuccess(collectionsMap))\n      })\n      .catch(err => {\n        dispatch(fetchCollectionsFailure(err.message))\n      })\n  }\n}\n "]},"metadata":{},"sourceType":"module"}